2025-08-04 11:14:41 [main] INFO  com.example.demo.DemoApplication - Starting DemoApplication using Java 23.0.1 with PID 4252 (C:\PROGRAMMING\Visual Studio Code\AIPA_APP\aipa_backend\target\classes started by Arnol in C:\PROGRAMMING\Visual Studio Code\AIPA_APP\aipa_backend)
2025-08-04 11:14:41 [main] DEBUG com.example.demo.DemoApplication - Running with Spring Boot v3.4.4, Spring v6.2.5
2025-08-04 11:14:41 [main] INFO  com.example.demo.DemoApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-04 11:14:42 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'passwordEncoder' with a different definition: replacing [Root bean: class=null; scope=; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=securityConfig; factoryMethodName=passwordEncoder; initMethodNames=null; destroyMethodNames=[(inferred)]; defined in class path resource [com/example/demo/SecurityConfig.class]] with [Root bean: class=null; scope=; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=demoApplication; factoryMethodName=passwordEncoder; initMethodNames=null; destroyMethodNames=[(inferred)]; defined in com.example.demo.DemoApplication]
2025-08-04 11:14:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 11:14:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 119 ms. Found 3 JPA repository interfaces.
2025-08-04 11:14:43 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-04 11:14:43 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-04 11:14:43 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-08-04 11:14:43 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-04 11:14:43 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1241 ms
2025-08-04 11:14:43 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-04 11:14:43 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
2025-08-04 11:14:43 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-04 11:14:43 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 11:14:43 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-04 11:14:43 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@2c678c7b
2025-08-04 11:14:43 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-04 11:14:43 [main] WARN  org.hibernate.orm.incubating - HHH90006001: Encountered incubating setting [hibernate.type.preferred_uuid_jdbc_type].  See javadoc on corresponding `org.hibernate.cfg.AvailableSettings` constant for details.
2025-08-04 11:14:44 [main] WARN  org.hibernate.orm.incubating - HHH90006001: Encountered incubating setting [hibernate.type.preferred_uuid_jdbc_type].  See javadoc on corresponding `org.hibernate.cfg.AvailableSettings` constant for details.
2025-08-04 11:14:44 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-04 11:14:44 [main] DEBUG org.hibernate.SQL - 
    alter table users 
       drop constraint UK6dotkott2kjsp8vw4d0m25fb7
2025-08-04 11:14:44 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 11:14:45 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-04 11:14:45 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 11:14:45 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsService
2025-08-04 11:14:46 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-04 11:14:46 [main] INFO  com.example.demo.DemoApplication - Started DemoApplication in 5.036 seconds (process running for 5.446)
2025-08-04 11:14:46 [http-nio-8080-exec-4] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-04 11:14:46 [http-nio-8080-exec-4] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-04 11:14:46 [http-nio-8080-exec-4] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-04 11:14:46 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:14:46 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:14:46 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:14:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:14:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:14:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:14:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:14:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:14:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:14:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:14:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:14:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:14:47 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:14:47 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:14:47 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:14:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:14:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:14:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:14:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:14:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:14:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:14:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:14:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:14:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:14:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:14:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:14:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:15:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:15:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:15:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:15:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:15:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:15:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:15:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:15:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:15:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:15:25 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 11:15:25 [http-nio-8080-exec-5] INFO  c.e.d.CalendarEventEnhancementService - Analyzing input for calendar events: whats good my guy
2025-08-04 11:15:25 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 11:15:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:15:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:15:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 11:15:40 [http-nio-8080-exec-6] INFO  c.e.d.CalendarEventEnhancementService - Analyzing input for calendar events: my guy what is happening
2025-08-04 11:15:40 [http-nio-8080-exec-6] INFO  c.e.d.CalendarEventEnhancementService - Input filtered out as question by MemoryFilterService: my guy what is happening
2025-08-04 11:15:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 11:15:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:16:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:16:17 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:16:17 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:16:17 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:16:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:16:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:16:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 11:16:20 [http-nio-8080-exec-6] INFO  c.e.d.CalendarEventEnhancementService - Analyzing input for calendar events: whats good G
2025-08-04 11:16:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 11:16:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:16:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:16:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:16:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:16:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:16:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:16:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:17:00 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:00 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:00 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:00 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:09 [http-nio-8080-exec-5] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:17:09 [http-nio-8080-exec-1] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:17:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:09 [http-nio-8080-exec-5] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:17:09 [http-nio-8080-exec-1] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:17:09 [http-nio-8080-exec-1] INFO  com.example.demo.MemoryController - Getting all memories for user ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:17:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 11:17:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 11:17:09 [http-nio-8080-exec-1] INFO  com.example.demo.MemoryController - Found 22 memories for user
2025-08-04 11:17:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:09 [http-nio-8080-exec-5] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:17:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:09 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:09 [http-nio-8080-exec-5] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:17:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 11:17:09 [http-nio-8080-exec-6] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:17:09 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:09 [http-nio-8080-exec-6] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:17:09 [http-nio-8080-exec-6] INFO  com.example.demo.MemoryController - Getting all memories for user ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:17:09 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 11:17:09 [http-nio-8080-exec-6] INFO  com.example.demo.MemoryController - Found 22 memories for user
2025-08-04 11:17:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:17:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:17:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:16 [http-nio-8080-exec-3] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:17:16 [http-nio-8080-exec-7] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:17:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:16 [http-nio-8080-exec-3] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:17:16 [http-nio-8080-exec-3] INFO  com.example.demo.MemoryController - Getting all memories for user ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:17:16 [http-nio-8080-exec-7] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:17:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 11:17:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 11:17:16 [http-nio-8080-exec-3] INFO  com.example.demo.MemoryController - Found 21 memories for user
2025-08-04 11:17:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:17:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:17:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:19 [http-nio-8080-exec-1] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:17:19 [http-nio-8080-exec-5] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:17:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:19 [http-nio-8080-exec-5] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:17:19 [http-nio-8080-exec-1] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:17:19 [http-nio-8080-exec-1] INFO  com.example.demo.MemoryController - Getting all memories for user ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:17:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 11:17:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 11:17:19 [http-nio-8080-exec-1] INFO  com.example.demo.MemoryController - Found 20 memories for user
2025-08-04 11:17:24 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:24 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:17:24 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:17:24 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:24 [http-nio-8080-exec-8] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:17:24 [http-nio-8080-exec-10] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:17:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:24 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:24 [http-nio-8080-exec-10] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:17:24 [http-nio-8080-exec-8] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:17:24 [http-nio-8080-exec-8] INFO  com.example.demo.MemoryController - Getting all memories for user ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:17:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 11:17:24 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 11:17:24 [http-nio-8080-exec-8] INFO  com.example.demo.MemoryController - Found 19 memories for user
2025-08-04 11:17:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:17:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:17:26 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:26 [http-nio-8080-exec-4] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:17:26 [http-nio-8080-exec-2] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:17:26 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:26 [http-nio-8080-exec-2] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:17:26 [http-nio-8080-exec-4] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:17:26 [http-nio-8080-exec-2] INFO  com.example.demo.MemoryController - Getting all memories for user ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:17:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 11:17:26 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 11:17:26 [http-nio-8080-exec-2] INFO  com.example.demo.MemoryController - Found 18 memories for user
2025-08-04 11:17:34 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:34 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:34 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:17:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:34 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:34 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:17:34 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:17:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:17:34 [http-nio-8080-exec-3] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 6, SQLState: null
2025-08-04 11:17:34 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:17:34 [http-nio-8080-exec-3] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked: user_memories)
2025-08-04 11:17:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:17:34 [http-nio-8080-exec-5] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 6, SQLState: null
2025-08-04 11:17:34 [http-nio-8080-exec-2] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 6, SQLState: null
2025-08-04 11:17:34 [http-nio-8080-exec-5] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)
2025-08-04 11:17:34 [http-nio-8080-exec-2] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)
2025-08-04 11:17:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:17:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:17:34 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:17:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:17:34 [http-nio-8080-exec-6] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 6, SQLState: null
2025-08-04 11:17:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:17:34 [http-nio-8080-exec-6] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked: user_memories)
2025-08-04 11:17:34 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:17:34 [http-nio-8080-exec-1] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 6, SQLState: null
2025-08-04 11:17:34 [http-nio-8080-exec-5] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.CannotAcquireLockException: could not execute statement [[SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)] [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]; SQL [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]] with root cause
org.sqlite.SQLiteException: [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.DB.executeUpdate(DB.java:1054)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.lambda$executeLargeUpdate$2(JDBC3PreparedStatement.java:119)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:454)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeLargeUpdate(JDBC3PreparedStatement.java:118)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeUpdate(JDBC3PreparedStatement.java:100)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:108)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:40)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:52)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.doStaticUpdate(UpdateCoordinatorStandard.java:778)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.performUpdate(UpdateCoordinatorStandard.java:324)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.coordinateUpdate(UpdateCoordinatorStandard.java:242)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:2810)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:168)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:632)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:363)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1403)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:484)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2319)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1976)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.example.demo.MemoryService$$SpringCGLIB$$0.deactivateMemory(<generated>)
	at com.example.demo.MemoryController.deactivateMemory(MemoryController.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.demo.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-08-04 11:17:34 [http-nio-8080-exec-3] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.CannotAcquireLockException: could not execute statement [[SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked: user_memories)] [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]; SQL [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]] with root cause
org.sqlite.SQLiteException: [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked: user_memories)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.DB.executeUpdate(DB.java:1054)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.lambda$executeLargeUpdate$2(JDBC3PreparedStatement.java:119)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:454)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeLargeUpdate(JDBC3PreparedStatement.java:118)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeUpdate(JDBC3PreparedStatement.java:100)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:108)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:40)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:52)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.doStaticUpdate(UpdateCoordinatorStandard.java:778)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.performUpdate(UpdateCoordinatorStandard.java:324)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.coordinateUpdate(UpdateCoordinatorStandard.java:242)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:2810)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:168)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:632)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:363)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1403)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:484)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2319)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1976)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.example.demo.MemoryService$$SpringCGLIB$$0.deactivateMemory(<generated>)
	at com.example.demo.MemoryController.deactivateMemory(MemoryController.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.demo.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-08-04 11:17:34 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.CannotAcquireLockException: could not execute statement [[SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)] [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]; SQL [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]] with root cause
org.sqlite.SQLiteException: [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.DB.executeUpdate(DB.java:1054)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.lambda$executeLargeUpdate$2(JDBC3PreparedStatement.java:119)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:454)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeLargeUpdate(JDBC3PreparedStatement.java:118)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeUpdate(JDBC3PreparedStatement.java:100)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:108)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:40)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:52)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.doStaticUpdate(UpdateCoordinatorStandard.java:778)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.performUpdate(UpdateCoordinatorStandard.java:324)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.coordinateUpdate(UpdateCoordinatorStandard.java:242)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:2810)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:168)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:632)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:363)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1403)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:484)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2319)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1976)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.example.demo.MemoryService$$SpringCGLIB$$0.deactivateMemory(<generated>)
	at com.example.demo.MemoryController.deactivateMemory(MemoryController.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.demo.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-08-04 11:17:34 [http-nio-8080-exec-1] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked: user_memories)
2025-08-04 11:17:34 [http-nio-8080-exec-8] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 6, SQLState: null
2025-08-04 11:17:34 [http-nio-8080-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.CannotAcquireLockException: could not execute statement [[SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked: user_memories)] [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]; SQL [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]] with root cause
org.sqlite.SQLiteException: [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked: user_memories)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.DB.executeUpdate(DB.java:1054)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.lambda$executeLargeUpdate$2(JDBC3PreparedStatement.java:119)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:454)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeLargeUpdate(JDBC3PreparedStatement.java:118)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeUpdate(JDBC3PreparedStatement.java:100)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:108)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:40)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:52)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.doStaticUpdate(UpdateCoordinatorStandard.java:778)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.performUpdate(UpdateCoordinatorStandard.java:324)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.coordinateUpdate(UpdateCoordinatorStandard.java:242)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:2810)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:168)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:632)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:363)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1403)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:484)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2319)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1976)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.example.demo.MemoryService$$SpringCGLIB$$0.deactivateMemory(<generated>)
	at com.example.demo.MemoryController.deactivateMemory(MemoryController.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.demo.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-08-04 11:17:34 [http-nio-8080-exec-8] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)
2025-08-04 11:17:34 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.CannotAcquireLockException: could not execute statement [[SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked: user_memories)] [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]; SQL [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]] with root cause
org.sqlite.SQLiteException: [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked: user_memories)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.DB.executeUpdate(DB.java:1054)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.lambda$executeLargeUpdate$2(JDBC3PreparedStatement.java:119)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:454)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeLargeUpdate(JDBC3PreparedStatement.java:118)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeUpdate(JDBC3PreparedStatement.java:100)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:108)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:40)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:52)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.doStaticUpdate(UpdateCoordinatorStandard.java:778)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.performUpdate(UpdateCoordinatorStandard.java:324)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.coordinateUpdate(UpdateCoordinatorStandard.java:242)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:2810)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:168)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:632)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:363)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1403)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:484)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2319)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1976)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.example.demo.MemoryService$$SpringCGLIB$$0.deactivateMemory(<generated>)
	at com.example.demo.MemoryController.deactivateMemory(MemoryController.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.demo.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-08-04 11:17:34 [http-nio-8080-exec-8] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.CannotAcquireLockException: could not execute statement [[SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)] [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]; SQL [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]] with root cause
org.sqlite.SQLiteException: [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.DB.executeUpdate(DB.java:1054)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.lambda$executeLargeUpdate$2(JDBC3PreparedStatement.java:119)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:454)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeLargeUpdate(JDBC3PreparedStatement.java:118)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeUpdate(JDBC3PreparedStatement.java:100)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:108)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:40)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:52)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.doStaticUpdate(UpdateCoordinatorStandard.java:778)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.performUpdate(UpdateCoordinatorStandard.java:324)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.coordinateUpdate(UpdateCoordinatorStandard.java:242)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:2810)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:168)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:632)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:363)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1403)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:484)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2319)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1976)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.example.demo.MemoryService$$SpringCGLIB$$0.deactivateMemory(<generated>)
	at com.example.demo.MemoryController.deactivateMemory(MemoryController.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.demo.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-08-04 11:17:34 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:34 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:34 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:34 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:34 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:17:34 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:17:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:17:34 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:17:34 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:17:34 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:17:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:17:34 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:17:34 [http-nio-8080-exec-10] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 6, SQLState: null
2025-08-04 11:17:34 [http-nio-8080-exec-10] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked: user_memories)
2025-08-04 11:17:34 [http-nio-8080-exec-4] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 6, SQLState: null
2025-08-04 11:17:34 [http-nio-8080-exec-8] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 6, SQLState: null
2025-08-04 11:17:34 [http-nio-8080-exec-4] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)
2025-08-04 11:17:34 [http-nio-8080-exec-8] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)
2025-08-04 11:17:34 [http-nio-8080-exec-7] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 6, SQLState: null
2025-08-04 11:17:34 [http-nio-8080-exec-7] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked: user_memories)
2025-08-04 11:17:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:17:34 [http-nio-8080-exec-10] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.CannotAcquireLockException: could not execute statement [[SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked: user_memories)] [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]; SQL [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]] with root cause
org.sqlite.SQLiteException: [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked: user_memories)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.DB.executeUpdate(DB.java:1054)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.lambda$executeLargeUpdate$2(JDBC3PreparedStatement.java:119)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:454)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeLargeUpdate(JDBC3PreparedStatement.java:118)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeUpdate(JDBC3PreparedStatement.java:100)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:108)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:40)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:52)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.doStaticUpdate(UpdateCoordinatorStandard.java:778)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.performUpdate(UpdateCoordinatorStandard.java:324)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.coordinateUpdate(UpdateCoordinatorStandard.java:242)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:2810)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:168)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:632)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:363)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1403)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:484)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2319)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1976)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.example.demo.MemoryService$$SpringCGLIB$$0.deactivateMemory(<generated>)
	at com.example.demo.MemoryController.deactivateMemory(MemoryController.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.demo.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-08-04 11:17:34 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.CannotAcquireLockException: could not execute statement [[SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)] [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]; SQL [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]] with root cause
org.sqlite.SQLiteException: [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.DB.executeUpdate(DB.java:1054)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.lambda$executeLargeUpdate$2(JDBC3PreparedStatement.java:119)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:454)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeLargeUpdate(JDBC3PreparedStatement.java:118)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeUpdate(JDBC3PreparedStatement.java:100)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:108)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:40)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:52)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.doStaticUpdate(UpdateCoordinatorStandard.java:778)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.performUpdate(UpdateCoordinatorStandard.java:324)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.coordinateUpdate(UpdateCoordinatorStandard.java:242)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:2810)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:168)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:632)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:363)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1403)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:484)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2319)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1976)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.example.demo.MemoryService$$SpringCGLIB$$0.deactivateMemory(<generated>)
	at com.example.demo.MemoryController.deactivateMemory(MemoryController.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.demo.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-08-04 11:17:34 [http-nio-8080-exec-8] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.CannotAcquireLockException: could not execute statement [[SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)] [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]; SQL [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]] with root cause
org.sqlite.SQLiteException: [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.DB.executeUpdate(DB.java:1054)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.lambda$executeLargeUpdate$2(JDBC3PreparedStatement.java:119)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:454)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeLargeUpdate(JDBC3PreparedStatement.java:118)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeUpdate(JDBC3PreparedStatement.java:100)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:108)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:40)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:52)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.doStaticUpdate(UpdateCoordinatorStandard.java:778)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.performUpdate(UpdateCoordinatorStandard.java:324)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.coordinateUpdate(UpdateCoordinatorStandard.java:242)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:2810)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:168)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:632)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:363)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1403)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:484)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2319)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1976)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.example.demo.MemoryService$$SpringCGLIB$$0.deactivateMemory(<generated>)
	at com.example.demo.MemoryController.deactivateMemory(MemoryController.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.demo.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-08-04 11:17:34 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:17:34 [http-nio-8080-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.CannotAcquireLockException: could not execute statement [[SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked: user_memories)] [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]; SQL [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]] with root cause
org.sqlite.SQLiteException: [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked: user_memories)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.DB.executeUpdate(DB.java:1054)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.lambda$executeLargeUpdate$2(JDBC3PreparedStatement.java:119)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:454)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeLargeUpdate(JDBC3PreparedStatement.java:118)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeUpdate(JDBC3PreparedStatement.java:100)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:108)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:40)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:52)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.doStaticUpdate(UpdateCoordinatorStandard.java:778)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.performUpdate(UpdateCoordinatorStandard.java:324)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.coordinateUpdate(UpdateCoordinatorStandard.java:242)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:2810)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:168)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:632)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:363)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1403)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:484)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2319)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1976)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.example.demo.MemoryService$$SpringCGLIB$$0.deactivateMemory(<generated>)
	at com.example.demo.MemoryController.deactivateMemory(MemoryController.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.demo.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-08-04 11:17:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:17:34 [http-nio-8080-exec-6] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 6, SQLState: null
2025-08-04 11:17:34 [http-nio-8080-exec-6] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked: user_memories)
2025-08-04 11:17:34 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:17:34 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:34 [http-nio-8080-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.CannotAcquireLockException: could not execute statement [[SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked: user_memories)] [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]; SQL [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]] with root cause
org.sqlite.SQLiteException: [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked: user_memories)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.DB.executeUpdate(DB.java:1054)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.lambda$executeLargeUpdate$2(JDBC3PreparedStatement.java:119)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:454)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeLargeUpdate(JDBC3PreparedStatement.java:118)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeUpdate(JDBC3PreparedStatement.java:100)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:108)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:40)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:52)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.doStaticUpdate(UpdateCoordinatorStandard.java:778)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.performUpdate(UpdateCoordinatorStandard.java:324)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.coordinateUpdate(UpdateCoordinatorStandard.java:242)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:2810)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:168)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:632)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:363)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1403)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:484)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2319)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1976)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.example.demo.MemoryService$$SpringCGLIB$$0.deactivateMemory(<generated>)
	at com.example.demo.MemoryController.deactivateMemory(MemoryController.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.demo.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-08-04 11:17:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:34 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:17:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:17:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:17:34 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:34 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:17:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:17:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:17:34 [http-nio-8080-exec-3] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 6, SQLState: null
2025-08-04 11:17:34 [http-nio-8080-exec-3] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked: user_memories)
2025-08-04 11:17:34 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:17:34 [http-nio-8080-exec-1] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 6, SQLState: null
2025-08-04 11:17:34 [http-nio-8080-exec-2] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 6, SQLState: null
2025-08-04 11:17:34 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:17:34 [http-nio-8080-exec-1] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)
2025-08-04 11:17:34 [http-nio-8080-exec-2] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)
2025-08-04 11:17:34 [http-nio-8080-exec-3] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.CannotAcquireLockException: could not execute statement [[SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked: user_memories)] [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]; SQL [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]] with root cause
org.sqlite.SQLiteException: [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked: user_memories)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.DB.executeUpdate(DB.java:1054)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.lambda$executeLargeUpdate$2(JDBC3PreparedStatement.java:119)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:454)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeLargeUpdate(JDBC3PreparedStatement.java:118)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeUpdate(JDBC3PreparedStatement.java:100)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:108)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:40)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:52)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.doStaticUpdate(UpdateCoordinatorStandard.java:778)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.performUpdate(UpdateCoordinatorStandard.java:324)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.coordinateUpdate(UpdateCoordinatorStandard.java:242)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:2810)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:168)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:632)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:363)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1403)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:484)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2319)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1976)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.example.demo.MemoryService$$SpringCGLIB$$0.deactivateMemory(<generated>)
	at com.example.demo.MemoryController.deactivateMemory(MemoryController.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.demo.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-08-04 11:17:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:17:34 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:17:34 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:17:34 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.CannotAcquireLockException: could not execute statement [[SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)] [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]; SQL [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]] with root cause
org.sqlite.SQLiteException: [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.DB.executeUpdate(DB.java:1054)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.lambda$executeLargeUpdate$2(JDBC3PreparedStatement.java:119)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:454)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeLargeUpdate(JDBC3PreparedStatement.java:118)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeUpdate(JDBC3PreparedStatement.java:100)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:108)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:40)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:52)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.doStaticUpdate(UpdateCoordinatorStandard.java:778)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.performUpdate(UpdateCoordinatorStandard.java:324)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.coordinateUpdate(UpdateCoordinatorStandard.java:242)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:2810)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:168)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:632)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:363)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1403)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:484)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2319)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1976)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.example.demo.MemoryService$$SpringCGLIB$$0.deactivateMemory(<generated>)
	at com.example.demo.MemoryController.deactivateMemory(MemoryController.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.demo.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-08-04 11:17:34 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.CannotAcquireLockException: could not execute statement [[SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)] [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]; SQL [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]] with root cause
org.sqlite.SQLiteException: [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.DB.executeUpdate(DB.java:1054)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.lambda$executeLargeUpdate$2(JDBC3PreparedStatement.java:119)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:454)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeLargeUpdate(JDBC3PreparedStatement.java:118)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeUpdate(JDBC3PreparedStatement.java:100)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:108)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:40)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:52)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.doStaticUpdate(UpdateCoordinatorStandard.java:778)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.performUpdate(UpdateCoordinatorStandard.java:324)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.coordinateUpdate(UpdateCoordinatorStandard.java:242)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:2810)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:168)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:632)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:363)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1403)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:484)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2319)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1976)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.example.demo.MemoryService$$SpringCGLIB$$0.deactivateMemory(<generated>)
	at com.example.demo.MemoryController.deactivateMemory(MemoryController.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.demo.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-08-04 11:17:34 [http-nio-8080-exec-9] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 6, SQLState: null
2025-08-04 11:17:34 [http-nio-8080-exec-9] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked: user_memories)
2025-08-04 11:17:34 [http-nio-8080-exec-4] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 6, SQLState: null
2025-08-04 11:17:34 [http-nio-8080-exec-10] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 6, SQLState: null
2025-08-04 11:17:34 [http-nio-8080-exec-4] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)
2025-08-04 11:17:34 [http-nio-8080-exec-10] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)
2025-08-04 11:17:34 [http-nio-8080-exec-9] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.CannotAcquireLockException: could not execute statement [[SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked: user_memories)] [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]; SQL [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]] with root cause
org.sqlite.SQLiteException: [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked: user_memories)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.DB.executeUpdate(DB.java:1054)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.lambda$executeLargeUpdate$2(JDBC3PreparedStatement.java:119)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:454)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeLargeUpdate(JDBC3PreparedStatement.java:118)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeUpdate(JDBC3PreparedStatement.java:100)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:108)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:40)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:52)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.doStaticUpdate(UpdateCoordinatorStandard.java:778)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.performUpdate(UpdateCoordinatorStandard.java:324)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.coordinateUpdate(UpdateCoordinatorStandard.java:242)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:2810)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:168)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:632)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:363)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1403)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:484)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2319)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1976)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.example.demo.MemoryService$$SpringCGLIB$$0.deactivateMemory(<generated>)
	at com.example.demo.MemoryController.deactivateMemory(MemoryController.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.demo.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-08-04 11:17:34 [http-nio-8080-exec-4] INFO  o.h.e.i.DefaultLoadEventListener - HHH000327: Error performing load command
org.hibernate.exception.LockAcquisitionException: JDBC exception executing SQL [select m1_0.id,m1_0.category,m1_0.created_at,m1_0.encrypted_content,m1_0.is_active,m1_0.updated_at,m1_0.user_id,u1_0.id,u1_0.account_created,u1_0.email,u1_0.email_verified,u1_0.full_name,u1_0.is_active,u1_0.last_login,u1_0.memory_password,u1_0.password,u1_0.profile_image,u1_0.provider,u1_0.reset_token,u1_0.reset_token_expiry,u1_0.verification_token from user_memories m1_0 join users u1_0 on u1_0.id=m1_0.user_id where m1_0.id=?] [[SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)] [n/a]
	at org.hibernate.community.dialect.SQLiteDialect.lambda$buildSQLExceptionConversionDelegate$1(SQLiteDialect.java:477)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:265)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:218)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:98)
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:19)
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:66)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:180)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:145)
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:117)
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.load(SingleIdEntityLoaderStandardImpl.java:75)
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:3748)
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:3737)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:604)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromCacheOrDatasource(DefaultLoadEventListener.java:590)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:560)
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:544)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:207)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadWithRegularProxy(DefaultLoadEventListener.java:290)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:242)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:111)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:68)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:138)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1222)
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1210)
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.load(IdentifierLoadAccessImpl.java:209)
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.doLoad(IdentifierLoadAccessImpl.java:160)
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.lambda$load$1(IdentifierLoadAccessImpl.java:149)
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.perform(IdentifierLoadAccessImpl.java:112)
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.load(IdentifierLoadAccessImpl.java:149)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:2424)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:2395)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy127.find(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320)
	at jdk.proxy2/jdk.proxy2.$Proxy127.find(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:325)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy136.findById(Unknown Source)
	at com.example.demo.MemoryService.deactivateMemory(MemoryService.java:144)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.example.demo.MemoryService$$SpringCGLIB$$0.deactivateMemory(<generated>)
	at com.example.demo.MemoryController.deactivateMemory(MemoryController.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.demo.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.sqlite.SQLiteException: [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.lambda$executeQuery$1(JDBC3PreparedStatement.java:87)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:454)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeQuery(JDBC3PreparedStatement.java:82)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246)
	... 178 common frames omitted
2025-08-04 11:17:34 [http-nio-8080-exec-10] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.CannotAcquireLockException: could not execute statement [[SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)] [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]; SQL [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]] with root cause
org.sqlite.SQLiteException: [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.DB.executeUpdate(DB.java:1054)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.lambda$executeLargeUpdate$2(JDBC3PreparedStatement.java:119)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:454)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeLargeUpdate(JDBC3PreparedStatement.java:118)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeUpdate(JDBC3PreparedStatement.java:100)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:108)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:40)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:52)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.doStaticUpdate(UpdateCoordinatorStandard.java:778)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.performUpdate(UpdateCoordinatorStandard.java:324)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.coordinateUpdate(UpdateCoordinatorStandard.java:242)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:2810)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:168)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:632)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:363)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1403)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:484)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2319)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1976)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.example.demo.MemoryService$$SpringCGLIB$$0.deactivateMemory(<generated>)
	at com.example.demo.MemoryController.deactivateMemory(MemoryController.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.demo.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-08-04 11:17:34 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.CannotAcquireLockException: JDBC exception executing SQL [select m1_0.id,m1_0.category,m1_0.created_at,m1_0.encrypted_content,m1_0.is_active,m1_0.updated_at,m1_0.user_id,u1_0.id,u1_0.account_created,u1_0.email,u1_0.email_verified,u1_0.full_name,u1_0.is_active,u1_0.last_login,u1_0.memory_password,u1_0.password,u1_0.profile_image,u1_0.provider,u1_0.reset_token,u1_0.reset_token_expiry,u1_0.verification_token from user_memories m1_0 join users u1_0 on u1_0.id=m1_0.user_id where m1_0.id=?] [[SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)] [n/a]; SQL [n/a]] with root cause
org.sqlite.SQLiteException: [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.lambda$executeQuery$1(JDBC3PreparedStatement.java:87)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:454)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeQuery(JDBC3PreparedStatement.java:82)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:218)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:98)
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:19)
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:66)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:180)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:145)
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:117)
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.load(SingleIdEntityLoaderStandardImpl.java:75)
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:3748)
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:3737)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:604)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromCacheOrDatasource(DefaultLoadEventListener.java:590)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:560)
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:544)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:207)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadWithRegularProxy(DefaultLoadEventListener.java:290)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:242)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:111)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:68)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:138)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1222)
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1210)
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.load(IdentifierLoadAccessImpl.java:209)
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.doLoad(IdentifierLoadAccessImpl.java:160)
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.lambda$load$1(IdentifierLoadAccessImpl.java:149)
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.perform(IdentifierLoadAccessImpl.java:112)
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.load(IdentifierLoadAccessImpl.java:149)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:2424)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:2395)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy127.find(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320)
	at jdk.proxy2/jdk.proxy2.$Proxy127.find(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:325)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy136.findById(Unknown Source)
	at com.example.demo.MemoryService.deactivateMemory(MemoryService.java:144)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.example.demo.MemoryService$$SpringCGLIB$$0.deactivateMemory(<generated>)
	at com.example.demo.MemoryController.deactivateMemory(MemoryController.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.demo.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-08-04 11:17:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:17:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:17:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:39 [http-nio-8080-exec-5] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:17:39 [http-nio-8080-exec-7] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:17:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:39 [http-nio-8080-exec-5] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:17:39 [http-nio-8080-exec-7] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:17:39 [http-nio-8080-exec-7] INFO  com.example.demo.MemoryController - Getting all memories for user ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:17:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 11:17:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 11:17:39 [http-nio-8080-exec-7] INFO  com.example.demo.MemoryController - Found 16 memories for user
2025-08-04 11:17:42 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:42 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:17:42 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:17:42 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:42 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:42 [http-nio-8080-exec-2] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:17:42 [http-nio-8080-exec-3] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:17:42 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:42 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:42 [http-nio-8080-exec-3] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:17:42 [http-nio-8080-exec-2] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:17:42 [http-nio-8080-exec-3] INFO  com.example.demo.MemoryController - Getting all memories for user ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:17:42 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 11:17:42 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 11:17:42 [http-nio-8080-exec-3] INFO  com.example.demo.MemoryController - Found 15 memories for user
2025-08-04 11:17:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:17:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:17:45 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:45 [http-nio-8080-exec-10] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:17:45 [http-nio-8080-exec-9] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:17:45 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:45 [http-nio-8080-exec-9] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:17:45 [http-nio-8080-exec-9] INFO  com.example.demo.MemoryController - Getting all memories for user ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:17:45 [http-nio-8080-exec-10] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:17:45 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 11:17:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 11:17:45 [http-nio-8080-exec-9] INFO  com.example.demo.MemoryController - Found 14 memories for user
2025-08-04 11:17:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:17:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:17:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:47 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:47 [http-nio-8080-exec-5] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:17:47 [http-nio-8080-exec-7] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:17:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:47 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:47 [http-nio-8080-exec-5] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:17:47 [http-nio-8080-exec-7] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:17:47 [http-nio-8080-exec-5] INFO  com.example.demo.MemoryController - Getting all memories for user ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:17:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 11:17:47 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 11:17:47 [http-nio-8080-exec-5] INFO  com.example.demo.MemoryController - Found 13 memories for user
2025-08-04 11:17:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:17:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:17:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:49 [http-nio-8080-exec-2] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:17:49 [http-nio-8080-exec-3] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:17:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:49 [http-nio-8080-exec-3] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:17:49 [http-nio-8080-exec-2] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:17:49 [http-nio-8080-exec-2] INFO  com.example.demo.MemoryController - Getting all memories for user ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:17:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 11:17:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 11:17:49 [http-nio-8080-exec-2] INFO  com.example.demo.MemoryController - Found 12 memories for user
2025-08-04 11:17:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:17:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:17:52 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:52 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:52 [http-nio-8080-exec-10] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:17:52 [http-nio-8080-exec-9] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:17:52 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:52 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:17:52 [http-nio-8080-exec-9] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:17:52 [http-nio-8080-exec-10] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:17:52 [http-nio-8080-exec-10] INFO  com.example.demo.MemoryController - Getting all memories for user ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:17:52 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 11:17:52 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 11:17:52 [http-nio-8080-exec-10] INFO  com.example.demo.MemoryController - Found 11 memories for user
2025-08-04 11:18:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:18:58 [main] INFO  com.example.demo.DemoApplication - Starting DemoApplication using Java 23.0.1 with PID 20904 (C:\PROGRAMMING\Visual Studio Code\AIPA_APP\aipa_backend\target\classes started by Arnol in C:\PROGRAMMING\Visual Studio Code\AIPA_APP\aipa_backend)
2025-08-04 11:18:58 [main] DEBUG com.example.demo.DemoApplication - Running with Spring Boot v3.4.4, Spring v6.2.5
2025-08-04 11:18:58 [main] INFO  com.example.demo.DemoApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-04 11:18:59 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'passwordEncoder' with a different definition: replacing [Root bean: class=null; scope=; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=securityConfig; factoryMethodName=passwordEncoder; initMethodNames=null; destroyMethodNames=[(inferred)]; defined in class path resource [com/example/demo/SecurityConfig.class]] with [Root bean: class=null; scope=; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=demoApplication; factoryMethodName=passwordEncoder; initMethodNames=null; destroyMethodNames=[(inferred)]; defined in com.example.demo.DemoApplication]
2025-08-04 11:18:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 11:18:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 121 ms. Found 3 JPA repository interfaces.
2025-08-04 11:18:59 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-04 11:18:59 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-04 11:18:59 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-08-04 11:18:59 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-04 11:18:59 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1242 ms
2025-08-04 11:19:00 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-04 11:19:00 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
2025-08-04 11:19:00 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-04 11:19:00 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 11:19:00 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-04 11:19:00 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@18c820d2
2025-08-04 11:19:00 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-04 11:19:00 [main] WARN  org.hibernate.orm.incubating - HHH90006001: Encountered incubating setting [hibernate.type.preferred_uuid_jdbc_type].  See javadoc on corresponding `org.hibernate.cfg.AvailableSettings` constant for details.
2025-08-04 11:19:00 [main] WARN  org.hibernate.orm.incubating - HHH90006001: Encountered incubating setting [hibernate.type.preferred_uuid_jdbc_type].  See javadoc on corresponding `org.hibernate.cfg.AvailableSettings` constant for details.
2025-08-04 11:19:01 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-04 11:19:01 [main] DEBUG org.hibernate.SQL - 
    alter table users 
       drop constraint UK6dotkott2kjsp8vw4d0m25fb7
2025-08-04 11:19:01 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 11:19:01 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-04 11:19:02 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 11:19:02 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsService
2025-08-04 11:19:02 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-04 11:19:02 [main] INFO  com.example.demo.DemoApplication - Started DemoApplication in 4.364 seconds (process running for 4.656)
2025-08-04 11:19:18 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-04 11:19:18 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-04 11:19:18 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-04 11:19:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:19:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:19:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:19:22 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:19:22 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:19:22 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:19:22 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:19:22 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:19:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:19:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:19:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:19:22 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:19:22 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:19:22 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:19:23 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:19:23 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:19:23 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:19:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:19:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:19:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:19:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:19:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:19:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:19:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:19:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:19:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:19:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:19:30 [http-nio-8080-exec-7] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:19:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:19:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:19:30 [http-nio-8080-exec-7] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:19:30 [http-nio-8080-exec-7] INFO  com.example.demo.MemoryController - Getting all memories for user ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:19:30 [http-nio-8080-exec-8] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:19:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:19:30 [http-nio-8080-exec-8] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:19:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 11:19:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 11:19:30 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:19:30 [http-nio-8080-exec-6] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:19:30 [http-nio-8080-exec-7] INFO  com.example.demo.MemoryController - Found 11 memories for user
2025-08-04 11:19:30 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:19:30 [http-nio-8080-exec-6] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:19:30 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 11:19:30 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:19:30 [http-nio-8080-exec-9] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:19:30 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:19:30 [http-nio-8080-exec-9] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:19:30 [http-nio-8080-exec-9] INFO  com.example.demo.MemoryController - Getting all memories for user ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:19:30 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 11:19:30 [http-nio-8080-exec-9] INFO  com.example.demo.MemoryController - Found 11 memories for user
2025-08-04 11:19:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:19:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:19:39 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:19:39 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:19:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:19:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:19:39 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:19:39 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:19:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:19:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:19:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:19:39 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:19:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:19:39 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:19:39 [http-nio-8080-exec-1] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 6, SQLState: null
2025-08-04 11:19:39 [http-nio-8080-exec-2] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 6, SQLState: null
2025-08-04 11:19:39 [http-nio-8080-exec-4] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 6, SQLState: null
2025-08-04 11:19:39 [http-nio-8080-exec-1] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked: user_memories)
2025-08-04 11:19:39 [http-nio-8080-exec-5] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 6, SQLState: null
2025-08-04 11:19:39 [http-nio-8080-exec-2] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)
2025-08-04 11:19:39 [http-nio-8080-exec-4] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)
2025-08-04 11:19:39 [http-nio-8080-exec-5] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)
2025-08-04 11:19:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:19:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:19:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:19:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:19:39 [http-nio-8080-exec-10] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 6, SQLState: null
2025-08-04 11:19:39 [http-nio-8080-exec-3] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 6, SQLState: null
2025-08-04 11:19:39 [http-nio-8080-exec-3] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked: user_memories)
2025-08-04 11:19:39 [http-nio-8080-exec-10] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)
2025-08-04 11:19:39 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.CannotAcquireLockException: could not execute statement [[SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked: user_memories)] [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]; SQL [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]] with root cause
org.sqlite.SQLiteException: [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked: user_memories)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.DB.executeUpdate(DB.java:1054)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.lambda$executeLargeUpdate$2(JDBC3PreparedStatement.java:119)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:454)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeLargeUpdate(JDBC3PreparedStatement.java:118)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeUpdate(JDBC3PreparedStatement.java:100)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:108)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:40)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:52)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.doStaticUpdate(UpdateCoordinatorStandard.java:778)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.performUpdate(UpdateCoordinatorStandard.java:324)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.coordinateUpdate(UpdateCoordinatorStandard.java:242)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:2810)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:168)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:632)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:363)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1403)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:484)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2319)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1976)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.example.demo.MemoryService$$SpringCGLIB$$0.deactivateMemory(<generated>)
	at com.example.demo.MemoryController.deactivateMemory(MemoryController.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.demo.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-08-04 11:19:39 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.CannotAcquireLockException: could not execute statement [[SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)] [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]; SQL [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]] with root cause
org.sqlite.SQLiteException: [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.DB.executeUpdate(DB.java:1054)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.lambda$executeLargeUpdate$2(JDBC3PreparedStatement.java:119)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:454)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeLargeUpdate(JDBC3PreparedStatement.java:118)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeUpdate(JDBC3PreparedStatement.java:100)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:108)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:40)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:52)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.doStaticUpdate(UpdateCoordinatorStandard.java:778)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.performUpdate(UpdateCoordinatorStandard.java:324)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.coordinateUpdate(UpdateCoordinatorStandard.java:242)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:2810)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:168)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:632)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:363)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1403)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:484)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2319)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1976)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.example.demo.MemoryService$$SpringCGLIB$$0.deactivateMemory(<generated>)
	at com.example.demo.MemoryController.deactivateMemory(MemoryController.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.demo.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-08-04 11:19:39 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.CannotAcquireLockException: could not execute statement [[SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)] [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]; SQL [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]] with root cause
org.sqlite.SQLiteException: [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.DB.executeUpdate(DB.java:1054)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.lambda$executeLargeUpdate$2(JDBC3PreparedStatement.java:119)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:454)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeLargeUpdate(JDBC3PreparedStatement.java:118)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeUpdate(JDBC3PreparedStatement.java:100)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:108)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:40)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:52)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.doStaticUpdate(UpdateCoordinatorStandard.java:778)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.performUpdate(UpdateCoordinatorStandard.java:324)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.coordinateUpdate(UpdateCoordinatorStandard.java:242)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:2810)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:168)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:632)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:363)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1403)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:484)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2319)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1976)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.example.demo.MemoryService$$SpringCGLIB$$0.deactivateMemory(<generated>)
	at com.example.demo.MemoryController.deactivateMemory(MemoryController.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.demo.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-08-04 11:19:39 [http-nio-8080-exec-5] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.CannotAcquireLockException: could not execute statement [[SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)] [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]; SQL [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]] with root cause
org.sqlite.SQLiteException: [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.DB.executeUpdate(DB.java:1054)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.lambda$executeLargeUpdate$2(JDBC3PreparedStatement.java:119)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:454)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeLargeUpdate(JDBC3PreparedStatement.java:118)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeUpdate(JDBC3PreparedStatement.java:100)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:108)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:40)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:52)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.doStaticUpdate(UpdateCoordinatorStandard.java:778)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.performUpdate(UpdateCoordinatorStandard.java:324)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.coordinateUpdate(UpdateCoordinatorStandard.java:242)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:2810)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:168)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:632)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:363)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1403)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:484)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2319)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1976)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.example.demo.MemoryService$$SpringCGLIB$$0.deactivateMemory(<generated>)
	at com.example.demo.MemoryController.deactivateMemory(MemoryController.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.demo.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-08-04 11:19:39 [http-nio-8080-exec-3] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.CannotAcquireLockException: could not execute statement [[SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked: user_memories)] [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]; SQL [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]] with root cause
org.sqlite.SQLiteException: [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked: user_memories)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.DB.executeUpdate(DB.java:1054)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.lambda$executeLargeUpdate$2(JDBC3PreparedStatement.java:119)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:454)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeLargeUpdate(JDBC3PreparedStatement.java:118)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeUpdate(JDBC3PreparedStatement.java:100)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:108)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:40)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:52)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.doStaticUpdate(UpdateCoordinatorStandard.java:778)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.performUpdate(UpdateCoordinatorStandard.java:324)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.coordinateUpdate(UpdateCoordinatorStandard.java:242)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:2810)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:168)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:632)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:363)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1403)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:484)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2319)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1976)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.example.demo.MemoryService$$SpringCGLIB$$0.deactivateMemory(<generated>)
	at com.example.demo.MemoryController.deactivateMemory(MemoryController.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.demo.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-08-04 11:19:39 [http-nio-8080-exec-10] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.CannotAcquireLockException: could not execute statement [[SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)] [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]; SQL [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]] with root cause
org.sqlite.SQLiteException: [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.DB.executeUpdate(DB.java:1054)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.lambda$executeLargeUpdate$2(JDBC3PreparedStatement.java:119)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:454)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeLargeUpdate(JDBC3PreparedStatement.java:118)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeUpdate(JDBC3PreparedStatement.java:100)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:108)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:40)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:52)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.doStaticUpdate(UpdateCoordinatorStandard.java:778)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.performUpdate(UpdateCoordinatorStandard.java:324)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.coordinateUpdate(UpdateCoordinatorStandard.java:242)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:2810)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:168)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:632)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:363)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1403)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:484)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2319)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1976)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.example.demo.MemoryService$$SpringCGLIB$$0.deactivateMemory(<generated>)
	at com.example.demo.MemoryController.deactivateMemory(MemoryController.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.demo.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-08-04 11:19:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:19:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:19:39 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:19:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:19:39 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:19:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:19:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:19:39 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:19:39 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:19:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:19:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:19:39 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:19:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:19:39 [http-nio-8080-exec-9] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 6, SQLState: null
2025-08-04 11:19:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:19:39 [http-nio-8080-exec-6] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 6, SQLState: null
2025-08-04 11:19:39 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:19:39 [http-nio-8080-exec-9] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked: user_memories)
2025-08-04 11:19:39 [http-nio-8080-exec-8] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 6, SQLState: null
2025-08-04 11:19:39 [http-nio-8080-exec-6] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)
2025-08-04 11:19:39 [http-nio-8080-exec-7] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 6, SQLState: null
2025-08-04 11:19:39 [http-nio-8080-exec-7] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)
2025-08-04 11:19:39 [http-nio-8080-exec-4] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 6, SQLState: null
2025-08-04 11:19:39 [http-nio-8080-exec-8] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)
2025-08-04 11:19:39 [http-nio-8080-exec-4] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)
2025-08-04 11:19:39 [http-nio-8080-exec-9] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.CannotAcquireLockException: could not execute statement [[SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked: user_memories)] [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]; SQL [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]] with root cause
org.sqlite.SQLiteException: [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked: user_memories)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.DB.executeUpdate(DB.java:1054)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.lambda$executeLargeUpdate$2(JDBC3PreparedStatement.java:119)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:454)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeLargeUpdate(JDBC3PreparedStatement.java:118)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeUpdate(JDBC3PreparedStatement.java:100)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:108)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:40)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:52)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.doStaticUpdate(UpdateCoordinatorStandard.java:778)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.performUpdate(UpdateCoordinatorStandard.java:324)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.coordinateUpdate(UpdateCoordinatorStandard.java:242)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:2810)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:168)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:632)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:363)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1403)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:484)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2319)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1976)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.example.demo.MemoryService$$SpringCGLIB$$0.deactivateMemory(<generated>)
	at com.example.demo.MemoryController.deactivateMemory(MemoryController.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.demo.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-08-04 11:19:39 [http-nio-8080-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.CannotAcquireLockException: could not execute statement [[SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)] [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]; SQL [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]] with root cause
org.sqlite.SQLiteException: [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.DB.executeUpdate(DB.java:1054)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.lambda$executeLargeUpdate$2(JDBC3PreparedStatement.java:119)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:454)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeLargeUpdate(JDBC3PreparedStatement.java:118)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeUpdate(JDBC3PreparedStatement.java:100)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:108)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:40)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:52)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.doStaticUpdate(UpdateCoordinatorStandard.java:778)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.performUpdate(UpdateCoordinatorStandard.java:324)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.coordinateUpdate(UpdateCoordinatorStandard.java:242)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:2810)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:168)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:632)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:363)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1403)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:484)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2319)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1976)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.example.demo.MemoryService$$SpringCGLIB$$0.deactivateMemory(<generated>)
	at com.example.demo.MemoryController.deactivateMemory(MemoryController.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.demo.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-08-04 11:19:39 [http-nio-8080-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.CannotAcquireLockException: could not execute statement [[SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)] [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]; SQL [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]] with root cause
org.sqlite.SQLiteException: [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.DB.executeUpdate(DB.java:1054)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.lambda$executeLargeUpdate$2(JDBC3PreparedStatement.java:119)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:454)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeLargeUpdate(JDBC3PreparedStatement.java:118)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeUpdate(JDBC3PreparedStatement.java:100)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:108)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:40)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:52)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.doStaticUpdate(UpdateCoordinatorStandard.java:778)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.performUpdate(UpdateCoordinatorStandard.java:324)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.coordinateUpdate(UpdateCoordinatorStandard.java:242)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:2810)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:168)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:632)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:363)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1403)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:484)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2319)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1976)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.example.demo.MemoryService$$SpringCGLIB$$0.deactivateMemory(<generated>)
	at com.example.demo.MemoryController.deactivateMemory(MemoryController.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.demo.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-08-04 11:19:39 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.CannotAcquireLockException: could not execute statement [[SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)] [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]; SQL [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]] with root cause
org.sqlite.SQLiteException: [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.DB.executeUpdate(DB.java:1054)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.lambda$executeLargeUpdate$2(JDBC3PreparedStatement.java:119)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:454)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeLargeUpdate(JDBC3PreparedStatement.java:118)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeUpdate(JDBC3PreparedStatement.java:100)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:108)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:40)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:52)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.doStaticUpdate(UpdateCoordinatorStandard.java:778)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.performUpdate(UpdateCoordinatorStandard.java:324)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.coordinateUpdate(UpdateCoordinatorStandard.java:242)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:2810)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:168)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:632)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:363)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1403)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:484)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2319)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1976)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.example.demo.MemoryService$$SpringCGLIB$$0.deactivateMemory(<generated>)
	at com.example.demo.MemoryController.deactivateMemory(MemoryController.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.demo.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-08-04 11:19:39 [http-nio-8080-exec-8] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.CannotAcquireLockException: could not execute statement [[SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)] [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]; SQL [update user_memories set category=?,created_at=?,encrypted_content=?,is_active=?,updated_at=?,user_id=? where id=?]] with root cause
org.sqlite.SQLiteException: [SQLITE_LOCKED_SHAREDCACHE] Contention with a different database connection that shares the cache (database table is locked)
	at org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.sqlite.core.DB.execute(DB.java:985)
	at org.sqlite.core.DB.executeUpdate(DB.java:1054)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.lambda$executeLargeUpdate$2(JDBC3PreparedStatement.java:119)
	at org.sqlite.jdbc3.JDBC3Statement.withConnectionTimeout(JDBC3Statement.java:454)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeLargeUpdate(JDBC3PreparedStatement.java:118)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.executeUpdate(JDBC3PreparedStatement.java:100)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:108)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:40)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:52)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.doStaticUpdate(UpdateCoordinatorStandard.java:778)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.performUpdate(UpdateCoordinatorStandard.java:324)
	at org.hibernate.persister.entity.mutation.UpdateCoordinatorStandard.coordinateUpdate(UpdateCoordinatorStandard.java:242)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:2810)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:168)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:632)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:363)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1403)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:484)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2319)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1976)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.example.demo.MemoryService$$SpringCGLIB$$0.deactivateMemory(<generated>)
	at com.example.demo.MemoryController.deactivateMemory(MemoryController.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.demo.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-08-04 11:19:52 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:20:22 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:20:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:21:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:21:52 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:08 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:08 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:08 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:08 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:08 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:08 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:08 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:22:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:22:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:22:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:22:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:22:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:09 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:09 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:13 [http-nio-8080-exec-3] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:22:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:13 [http-nio-8080-exec-3] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:22:13 [http-nio-8080-exec-3] INFO  com.example.demo.MemoryController - Getting all memories for user ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:22:13 [http-nio-8080-exec-1] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:22:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 11:22:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:13 [http-nio-8080-exec-1] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:22:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 11:22:13 [http-nio-8080-exec-3] INFO  com.example.demo.MemoryController - Found 11 memories for user
2025-08-04 11:22:13 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:13 [http-nio-8080-exec-5] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:22:13 [http-nio-8080-exec-10] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:22:13 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:13 [http-nio-8080-exec-10] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:22:13 [http-nio-8080-exec-5] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:22:13 [http-nio-8080-exec-5] INFO  com.example.demo.MemoryController - Getting all memories for user ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:22:13 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 11:22:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 11:22:13 [http-nio-8080-exec-5] INFO  com.example.demo.MemoryController - Found 11 memories for user
2025-08-04 11:22:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:22:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:22:22 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:22 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:22:22 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:22:22 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:22 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:22:22 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:22:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:22:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:22:22 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:22 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:22:22 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:22:22 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:22 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:22:22 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:22:22 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:22 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:22:22 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:22:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:22:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:22:22 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:22 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:22:22 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:22:22 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:22 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:22:22 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:22:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 11:22:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 11:22:22 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:22 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:22 [http-nio-8080-exec-9] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:22:22 [http-nio-8080-exec-7] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:22:22 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:22 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:22 [http-nio-8080-exec-7] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:22:22 [http-nio-8080-exec-9] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:22:22 [http-nio-8080-exec-9] INFO  com.example.demo.MemoryController - Getting all memories for user ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:22:22 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 11:22:22 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 11:22:22 [http-nio-8080-exec-9] INFO  com.example.demo.MemoryController - Found 0 memories for user
2025-08-04 11:22:38 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:44 [http-nio-8080-exec-6] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:22:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:44 [http-nio-8080-exec-6] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:22:44 [http-nio-8080-exec-6] INFO  com.example.demo.MemoryController - Storing memory for user ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b, category: Personal
2025-08-04 11:22:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    insert 
    into
        user_memories
        (category, created_at, encrypted_content, is_active, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-08-04 11:22:44 [http-nio-8080-exec-6] INFO  com.example.demo.MemoryController - Memory stored successfully with ID: c9efb0aa-7781-458c-8a50-7201138b70ea
2025-08-04 11:22:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        e1_0.user_id,
        e1_0.id,
        e1_0.description,
        e1_0.event_color,
        e1_0.is_all_day,
        e1_0.plan_title,
        e1_0.start_date,
        e1_0.title 
    from
        calendar_events e1_0 
    where
        e1_0.user_id=?
2025-08-04 11:22:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:44 [http-nio-8080-exec-3] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:22:44 [http-nio-8080-exec-1] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:22:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:22:44 [http-nio-8080-exec-1] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:22:44 [http-nio-8080-exec-3] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:22:44 [http-nio-8080-exec-1] INFO  com.example.demo.MemoryController - Getting all memories for user ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:22:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 11:22:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 11:22:44 [http-nio-8080-exec-1] INFO  com.example.demo.MemoryController - Found 1 memories for user
2025-08-04 11:23:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:23:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:23:19 [http-nio-8080-exec-7] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:23:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:23:19 [http-nio-8080-exec-7] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:23:19 [http-nio-8080-exec-7] INFO  com.example.demo.MemoryController - Storing memory for user ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b, category: Preferences
2025-08-04 11:23:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    insert 
    into
        user_memories
        (category, created_at, encrypted_content, is_active, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-08-04 11:23:19 [http-nio-8080-exec-7] INFO  com.example.demo.MemoryController - Memory stored successfully with ID: b23d34d7-1ea0-4413-bf0f-d201f337cff2
2025-08-04 11:23:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        e1_0.user_id,
        e1_0.id,
        e1_0.description,
        e1_0.event_color,
        e1_0.is_all_day,
        e1_0.plan_title,
        e1_0.start_date,
        e1_0.title 
    from
        calendar_events e1_0 
    where
        e1_0.user_id=?
2025-08-04 11:23:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:23:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:23:19 [http-nio-8080-exec-8] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:23:19 [http-nio-8080-exec-9] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:23:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:23:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:23:19 [http-nio-8080-exec-8] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:23:19 [http-nio-8080-exec-9] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:23:19 [http-nio-8080-exec-9] INFO  com.example.demo.MemoryController - Getting all memories for user ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:23:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 11:23:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 11:23:19 [http-nio-8080-exec-9] INFO  com.example.demo.MemoryController - Found 2 memories for user
2025-08-04 11:23:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:24:08 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:24:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:25:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:25:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:26:40 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:27:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:27:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:27:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:27:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:27:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:27:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:27:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:27:43 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:27:43 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:27:43 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:27:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:27:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:27:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:27:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:27:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:27:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:27:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:27:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:27:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:27:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:27:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:27:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:27:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:27:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:27:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:27:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:27:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:27:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:27:52 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:27:52 [http-nio-8080-exec-10] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:27:52 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:27:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:27:52 [http-nio-8080-exec-10] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:27:52 [http-nio-8080-exec-10] INFO  com.example.demo.MemoryController - Getting all memories for user ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:27:52 [http-nio-8080-exec-5] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:27:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:27:52 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 11:27:52 [http-nio-8080-exec-5] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:27:52 [http-nio-8080-exec-10] INFO  com.example.demo.MemoryController - Found 2 memories for user
2025-08-04 11:27:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 11:27:52 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:27:52 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:27:52 [http-nio-8080-exec-2] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:27:52 [http-nio-8080-exec-7] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:27:52 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:27:52 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:27:52 [http-nio-8080-exec-2] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:27:52 [http-nio-8080-exec-2] INFO  com.example.demo.MemoryController - Getting all memories for user ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:27:52 [http-nio-8080-exec-7] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:27:52 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 11:27:52 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 11:27:52 [http-nio-8080-exec-2] INFO  com.example.demo.MemoryController - Found 2 memories for user
2025-08-04 11:27:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:27:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:27:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:27:56 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:27:56 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:27:56 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:28:07 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:28:07 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:28:07 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 11:28:07 [http-nio-8080-exec-3] INFO  c.e.d.CalendarEventEnhancementService - Analyzing input for calendar events: What up bro
2025-08-04 11:28:07 [http-nio-8080-exec-3] INFO  c.e.d.CalendarEventEnhancementService - Input filtered out as question by MemoryFilterService: What up bro
2025-08-04 11:28:07 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 11:28:07 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 11:28:13 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:28:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:28:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:28:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 11:28:20 [http-nio-8080-exec-5] INFO  c.e.d.CalendarEventEnhancementService - Analyzing input for calendar events: what is my dads name
2025-08-04 11:28:20 [http-nio-8080-exec-5] INFO  c.e.d.CalendarEventEnhancementService - Input filtered out as question by MemoryFilterService: what is my dads name
2025-08-04 11:28:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 11:28:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:28:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:28:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 11:28:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    insert 
    into
        user_memories
        (category, created_at, encrypted_content, is_active, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-08-04 11:28:43 [http-nio-8080-exec-2] INFO  c.e.d.CalendarEventEnhancementService - Analyzing input for calendar events: Also my birthday is on March 23 man
2025-08-04 11:28:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 11:28:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:28:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:28:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:28:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.title=? 
        and ce1_0.start_date=? 
        and ce1_0.user_id=?
2025-08-04 11:28:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:28:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:28:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:29:03 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:29:03 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:29:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:29:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:29:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:29:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:29:06 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:29:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:29:06 [http-nio-8080-exec-4] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:29:06 [http-nio-8080-exec-9] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:29:06 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:29:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:29:06 [http-nio-8080-exec-4] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:29:06 [http-nio-8080-exec-9] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:29:06 [http-nio-8080-exec-9] INFO  com.example.demo.MemoryController - Getting all memories for user ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:29:06 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 11:29:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 11:29:06 [http-nio-8080-exec-9] INFO  com.example.demo.MemoryController - Found 3 memories for user
2025-08-04 11:29:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:29:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:29:06 [http-nio-8080-exec-6] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:29:06 [http-nio-8080-exec-3] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:29:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:29:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:29:06 [http-nio-8080-exec-3] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:29:06 [http-nio-8080-exec-6] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:29:06 [http-nio-8080-exec-3] INFO  com.example.demo.MemoryController - Getting all memories for user ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:29:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 11:29:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 11:29:06 [http-nio-8080-exec-3] INFO  com.example.demo.MemoryController - Found 3 memories for user
2025-08-04 11:29:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:29:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:29:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:29:13 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:29:13 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:29:13 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:29:13 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:29:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:29:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:29:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 11:29:23 [http-nio-8080-exec-8] INFO  c.e.d.CalendarEventEnhancementService - Analyzing input for calendar events: Add my birthday to my calendar please
2025-08-04 11:29:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 11:29:25 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:29:25 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:29:25 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.title=? 
        and ce1_0.start_date=? 
        and ce1_0.user_id=?
2025-08-04 11:29:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:30:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:30:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:30:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:30:13 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:30:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:31:13 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:31:13 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:31:13 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:31:13 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:31:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:32:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:32:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:32:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:32:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:32:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:33:13 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:33:13 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:33:13 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:33:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:33:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:33:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:33:30 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:33:30 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:33:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:33:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:33:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:33:34 [http-nio-8080-exec-6] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:33:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:33:34 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:33:34 [http-nio-8080-exec-6] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:33:34 [http-nio-8080-exec-6] INFO  com.example.demo.MemoryController - Getting all memories for user ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:33:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 11:33:34 [http-nio-8080-exec-3] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:33:34 [http-nio-8080-exec-6] INFO  com.example.demo.MemoryController - Found 3 memories for user
2025-08-04 11:33:34 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:33:34 [http-nio-8080-exec-3] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:33:34 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 11:33:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:33:34 [http-nio-8080-exec-1] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:33:34 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:33:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:33:34 [http-nio-8080-exec-1] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:33:34 [http-nio-8080-exec-1] INFO  com.example.demo.MemoryController - Getting all memories for user ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:33:34 [http-nio-8080-exec-10] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:33:34 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:33:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 11:33:34 [http-nio-8080-exec-10] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:33:34 [http-nio-8080-exec-1] INFO  com.example.demo.MemoryController - Found 3 memories for user
2025-08-04 11:33:34 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 11:33:42 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:33:42 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:33:42 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:33:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:33:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:33:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:33:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:33:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:33:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:33:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 11:33:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    insert 
    into
        user_memories
        (category, created_at, encrypted_content, is_active, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-08-04 11:33:56 [http-nio-8080-exec-9] INFO  c.e.d.CalendarEventEnhancementService - Analyzing input for calendar events: My birthday is on 23 march
2025-08-04 11:33:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 11:34:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:34:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:34:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:34:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:34:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:34:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:34:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:34:08 [http-nio-8080-exec-7] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:34:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:34:08 [http-nio-8080-exec-7] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:34:08 [http-nio-8080-exec-7] INFO  com.example.demo.MemoryController - Getting all memories for user ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:34:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 11:34:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:34:08 [http-nio-8080-exec-7] INFO  com.example.demo.MemoryController - Found 4 memories for user
2025-08-04 11:34:08 [http-nio-8080-exec-2] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:34:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:34:08 [http-nio-8080-exec-2] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:34:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 11:34:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:34:08 [http-nio-8080-exec-8] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:34:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:34:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:34:08 [http-nio-8080-exec-8] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:34:08 [http-nio-8080-exec-8] INFO  com.example.demo.MemoryController - Getting all memories for user ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:34:08 [http-nio-8080-exec-4] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 11:34:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:34:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 11:34:08 [http-nio-8080-exec-4] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 11:34:08 [http-nio-8080-exec-8] INFO  com.example.demo.MemoryController - Found 4 memories for user
2025-08-04 11:34:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 11:34:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:34:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:34:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:34:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:34:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:34:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:34:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:34:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:35:13 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:35:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:35:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:35:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:35:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:36:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:36:43 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:37:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:37:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:37:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:37:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:37:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:38:13 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:38:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:38:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:38:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:38:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:39:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:39:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:39:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:39:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:39:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:39:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:39:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:39:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 11:39:48 [http-nio-8080-exec-10] INFO  c.e.d.CalendarEventEnhancementService - Analyzing input for calendar events: whaty upp
2025-08-04 11:39:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 11:39:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 11:39:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:39:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:39:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.title=? 
        and ce1_0.start_date=? 
        and ce1_0.user_id=?
2025-08-04 11:39:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    insert 
    into
        calendar_events
        (description, event_color, is_all_day, plan_title, start_date, title, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-08-04 11:39:52 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:39:52 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:39:52 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:39:52 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:39:52 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:39:52 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:40:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:40:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:40:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:40:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:40:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:41:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:41:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:41:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:41:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:41:43 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:42:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:42:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:42:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:42:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:42:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:42:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:42:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    delete 
    from
        calendar_events 
    where
        id=? 
        and user_id=?
2025-08-04 11:42:23 [http-nio-8080-exec-8] INFO  com.example.demo.CalendarController - Event deleted successfully via bulk delete: eff3823c-fa4b-4e18-8401-c4510c0ab6b6
2025-08-04 11:42:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:42:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:42:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    delete 
    from
        calendar_events 
    where
        id=? 
        and user_id=?
2025-08-04 11:42:23 [http-nio-8080-exec-9] INFO  com.example.demo.CalendarController - Event not found for deletion: eff3823c-fa4b-4e18-8401-c4510c0ab6b6
2025-08-04 11:42:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:42:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:42:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    delete 
    from
        calendar_events 
    where
        id=? 
        and user_id=?
2025-08-04 11:42:28 [http-nio-8080-exec-4] INFO  com.example.demo.CalendarController - Event not found for deletion: eff3823c-fa4b-4e18-8401-c4510c0ab6b6
2025-08-04 11:42:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:42:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:42:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:42:32 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:42:32 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:42:32 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:42:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:42:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:42:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:42:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:42:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:42:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:42:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:42:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:42:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:42:39 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:42:39 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:42:39 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:42:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:42:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:42:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:42:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:42:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:42:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:42:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:42:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:42:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:42:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:42:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:42:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:42:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 11:42:50 [http-nio-8080-exec-3] INFO  c.e.d.CalendarEventEnhancementService - Analyzing input for calendar events: Whats good my guy
2025-08-04 11:42:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 11:42:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 11:43:13 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:43:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:43:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:43:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 11:43:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    insert 
    into
        user_memories
        (category, created_at, encrypted_content, is_active, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-08-04 11:43:19 [http-nio-8080-exec-5] INFO  c.e.d.CalendarEventEnhancementService - Analyzing input for calendar events: im chilling add an event for me that I have in 2 days its a Google Seminar
2025-08-04 11:43:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 11:43:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:43:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:43:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.title=? 
        and ce1_0.start_date=? 
        and ce1_0.user_id=?
2025-08-04 11:43:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    insert 
    into
        calendar_events
        (description, event_color, is_all_day, plan_title, start_date, title, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-08-04 11:43:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:43:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:43:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:43:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:43:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:43:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:43:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:43:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:43:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:43:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:43:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:43:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:43:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:43:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:43:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:43:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:43:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:43:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:43:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:43:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:43:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:43:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:43:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:43:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:43:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:44:00 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:44:00 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:44:00 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    delete 
    from
        calendar_events 
    where
        id=? 
        and user_id=?
2025-08-04 11:44:00 [http-nio-8080-exec-4] INFO  com.example.demo.CalendarController - Event deleted successfully via bulk delete: e55f3e8a-3f84-4adb-9583-ec5538903800
2025-08-04 11:44:00 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:44:00 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:44:00 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    delete 
    from
        calendar_events 
    where
        id=? 
        and user_id=?
2025-08-04 11:44:00 [http-nio-8080-exec-6] INFO  com.example.demo.CalendarController - Event not found for deletion: e55f3e8a-3f84-4adb-9583-ec5538903800
2025-08-04 11:44:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:44:32 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:44:32 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:44:32 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:44:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:44:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:44:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:44:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:45:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:45:00 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:00 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:00 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:45:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:45:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:45:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:45:01 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:01 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:01 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:45:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:03 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:03 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:03 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:03 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:45:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:45:03 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:03 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:03 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:45:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:45:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:45:25 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:25 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:25 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:25 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:26 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:26 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:26 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:45:26 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:26 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:26 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:45:33 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:33 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:33 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:45:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:33 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:45:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:45:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:45:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:46:03 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:46:33 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:46:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:46:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:46:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:47:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:47:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:47:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:47:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:47:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:48:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:48:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:48:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:48:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:48:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:49:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:49:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:49:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:49:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:49:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:50:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:50:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:50:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:50:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:51:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:51:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:51:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:51:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:52:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:53:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:53:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:53:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:53:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:54:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:54:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:54:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:54:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:55:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:55:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:55:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:55:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:56:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:56:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:56:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:56:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:57:43 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:57:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:57:43 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:57:43 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:58:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:58:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:58:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:58:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 11:59:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:59:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:59:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 11:59:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:00:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:00:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:00:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:00:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:01:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:01:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:01:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:01:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:02:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:02:43 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:02:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:02:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:03:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:03:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:03:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:03:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:04:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:04:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:04:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:04:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:05:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:05:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:05:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:05:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:05:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:05:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:05:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:06:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:06:33 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:06:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:06:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:06:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:07:03 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:07:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:07:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:07:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:07:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:08:03 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:08:33 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:08:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:08:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:08:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:09:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:09:33 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:09:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:09:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:09:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:10:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:10:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:10:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:10:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:10:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:11:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:11:33 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:11:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:11:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:11:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:12:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:12:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:12:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:12:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:12:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:13:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:13:33 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:13:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:13:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:13:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:14:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:14:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:14:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:14:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 12:14:12 [http-nio-8080-exec-8] INFO  c.e.d.CalendarEventEnhancementService - Analyzing input for calendar events: Hey man I haver a car meet in 2 weeks
2025-08-04 12:14:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 12:14:16 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:14:16 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:14:16 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.title=? 
        and ce1_0.start_date=? 
        and ce1_0.user_id=?
2025-08-04 12:14:16 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    insert 
    into
        calendar_events
        (description, event_color, is_all_day, plan_title, start_date, title, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-08-04 12:14:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:14:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:14:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.title=? 
        and ce1_0.start_date=? 
        and ce1_0.user_id=?
2025-08-04 12:14:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    insert 
    into
        calendar_events
        (description, event_color, is_all_day, plan_title, start_date, title, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-08-04 12:14:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:14:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:14:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.title=? 
        and ce1_0.start_date=? 
        and ce1_0.user_id=?
2025-08-04 12:14:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        calendar_events
        (description, event_color, is_all_day, plan_title, start_date, title, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-08-04 12:14:17 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:14:17 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:14:17 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:14:17 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:14:17 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:14:17 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:14:33 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:14:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:14:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:14:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:15:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:15:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:16:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:16:33 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:17:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:17:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:17:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:17:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:17:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:17:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:17:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:17:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:17:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:17:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:17:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:17:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:17:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:17:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:17:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:17:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:17:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:17:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:17:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:17:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:17:43 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:17:43 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:17:43 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:17:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:17:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:17:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:17:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:17:44 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:17:44 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:17:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:17:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:17:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:17:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:17:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:17:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:17:45 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:17:45 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:17:45 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:17:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:17:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:17:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:18:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:18:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:18:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:18:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:18:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:18:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:18:13 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:18:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:18:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:18:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:18:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:18:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:18:13 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:18:13 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:18:13 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:18:13 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:18:13 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:18:13 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:18:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:19:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:19:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:19:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:19:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:19:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:20:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:20:14 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:20:14 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:20:14 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:20:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:21:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:21:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:21:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:21:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:21:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:22:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:22:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:22:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:22:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:23:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:23:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:23:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:23:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:23:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:23:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:23:42 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:23:42 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:23:42 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:23:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:24:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:24:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:24:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:24:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:25:07 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:07 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:07 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:07 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:07 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:07 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:25:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:25:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:25:07 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:07 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:07 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:25:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:25:26 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:26 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:26 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:25:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:25:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:25:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:25:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:25:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:25:28 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:28 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:28 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:25:29 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:29 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:29 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:29 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:29 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:25:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:25:29 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:29 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:29 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:25:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:25:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:25:35 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:35 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:25:35 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:25:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:26:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:26:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:26:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:26:02 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:26:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:26:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:26:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:26:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:26:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:26:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:26:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:26:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:26:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:26:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:26:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:26:02 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:26:02 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:26:02 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:26:10 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:26:10 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:26:10 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:26:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:26:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:26:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:26:22 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:26:22 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:26:22 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:26:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:26:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:26:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:26:32 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:26:43 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:26:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:26:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:26:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:26:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:26:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:26:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:26:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:26:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:26:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:26:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:26:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:26:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:26:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:26:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:26:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:26:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:26:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:26:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:26:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:26:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:26:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:26:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:26:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:27:13 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:27:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:27:48 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:27:48 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:27:48 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:27:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:27:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:27:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:28:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:28:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:28:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:28:13 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:28:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:28:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:28:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:28:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:29:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:29:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:29:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:29:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:29:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:29:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:29:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:29:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:29:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:29:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:29:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:30:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:30:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:30:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:30:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:30:43 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:31:13 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:31:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:31:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:31:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:31:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:31:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:31:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:31:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:32:00 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:32:00 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:32:00 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:32:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:32:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:33:00 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:33:00 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:33:00 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:33:00 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:33:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:33:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:33:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:33:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:33:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:33:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:33:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:33:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:33:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:33:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:33:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:33:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:33:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:33:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:33:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:33:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:33:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:33:01 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:33:01 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:33:01 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:33:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:33:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:33:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:33:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:33:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:33:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:33:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:34:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:34:06 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:34:06 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:34:06 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:34:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:34:33 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:34:33 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:34:33 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    delete 
    from
        calendar_events 
    where
        id=? 
        and user_id=?
2025-08-04 12:34:33 [http-nio-8080-exec-10] INFO  com.example.demo.CalendarController - Event deleted successfully via bulk delete: 9576bb08-feb2-4c0f-8184-f40fc09838af
2025-08-04 12:34:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:34:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:34:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    delete 
    from
        calendar_events 
    where
        id=? 
        and user_id=?
2025-08-04 12:34:36 [http-nio-8080-exec-2] INFO  com.example.demo.CalendarController - Event not found for deletion: 9576bb08-feb2-4c0f-8184-f40fc09838af
2025-08-04 12:34:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:34:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:34:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:34:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:34:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:34:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:35:00 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:35:00 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:35:00 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:35:00 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:35:00 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:35:00 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:35:00 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:35:00 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:35:00 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:35:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:35:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:35:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:35:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:35:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:35:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:35:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:35:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:35:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:35:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:35:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:35:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:35:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:35:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:35:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:35:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:35:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:35:47 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:35:47 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:35:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:35:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:35:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:35:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:35:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:35:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:35:47 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:35:47 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:35:47 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:35:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:35:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:35:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:35:47 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:35:47 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:35:47 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:36:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:36:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:36:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:36:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    delete 
    from
        calendar_events 
    where
        id=? 
        and user_id=?
2025-08-04 12:36:31 [http-nio-8080-exec-1] INFO  com.example.demo.CalendarController - Event deleted successfully via bulk delete: 8bc32e99-36bd-4120-8aae-304c7c5808f2
2025-08-04 12:36:46 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:36:46 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:36:46 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    delete 
    from
        calendar_events 
    where
        id=? 
        and user_id=?
2025-08-04 12:36:46 [http-nio-8080-exec-10] INFO  com.example.demo.CalendarController - Event not found for deletion: 8bc32e99-36bd-4120-8aae-304c7c5808f2
2025-08-04 12:36:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:36:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:36:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:36:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:36:52 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:36:52 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:36:52 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    delete 
    from
        calendar_events 
    where
        id=? 
        and user_id=?
2025-08-04 12:36:52 [http-nio-8080-exec-8] INFO  com.example.demo.CalendarController - Event deleted successfully via bulk delete: 3c32d86e-7310-45b6-9a44-60705d545790
2025-08-04 12:36:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:36:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:36:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:37:17 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:37:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:37:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:37:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:37:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:38:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:38:47 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:38:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:38:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:38:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:39:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:39:47 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:39:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:39:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:39:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:40:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:40:47 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:40:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:40:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:40:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:41:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:41:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:41:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:41:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:41:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:42:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:42:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:42:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:42:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:42:53 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:42:53 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:42:53 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:43:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:43:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:43:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:43:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:43:51 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:43:51 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:43:51 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:44:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:44:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:44:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:44:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:44:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:44:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:44:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:44:47 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:45:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:45:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:45:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 12:45:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    insert 
    into
        user_memories
        (category, created_at, encrypted_content, is_active, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-08-04 12:45:10 [http-nio-8080-exec-8] INFO  c.e.d.CalendarEventEnhancementService - Analyzing input for calendar events: Hey I have another wedding in 3 weeks\
2025-08-04 12:45:10 [http-nio-8080-exec-8] INFO  c.e.d.CalendarEventEnhancementService - Detected event creation indicator: 'i have a' in input: Hey I have another wedding in 3 weeks\
2025-08-04 12:45:10 [http-nio-8080-exec-8] INFO  c.e.d.CalendarEventEnhancementService - Detected event: DetectedEvent{title='Nother Wedding', daysFromToday=21}
2025-08-04 12:45:10 [http-nio-8080-exec-8] INFO  c.e.d.CalendarEventEnhancementService - Detected event creation indicator: 'i have a' in input: Hey I have another wedding in 3 weeks\
2025-08-04 12:45:10 [http-nio-8080-exec-8] INFO  c.e.d.CalendarEventEnhancementService - Detected event: DetectedEvent{title='Another Wedding', daysFromToday=21}
2025-08-04 12:45:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 12:45:14 [reactor-http-nio-6] INFO  c.e.d.CalendarResponseValidationService - Validating calendar response for input: Hey I have another wedding in 3 weeks\
2025-08-04 12:45:14 [reactor-http-nio-6] INFO  c.e.d.CalendarResponseValidationService - Removed duplicate calendar entry: Google Seminar
2025-08-04 12:45:14 [reactor-http-nio-6] INFO  c.e.d.CalendarResponseValidationService - Removed duplicate calendar entry: Wedding
2025-08-04 12:45:14 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:45:14 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:45:14 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.title=? 
        and ce1_0.start_date=? 
        and ce1_0.user_id=?
2025-08-04 12:45:14 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    insert 
    into
        calendar_events
        (description, event_color, is_all_day, plan_title, start_date, title, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-08-04 12:45:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:45:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:45:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.title=? 
        and ce1_0.start_date=? 
        and ce1_0.user_id=?
2025-08-04 12:45:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:45:18 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:45:18 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:45:18 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:45:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:45:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:45:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    delete 
    from
        calendar_events 
    where
        id=? 
        and user_id=?
2025-08-04 12:45:34 [http-nio-8080-exec-9] INFO  com.example.demo.CalendarController - Event deleted successfully via bulk delete: 3b8f498c-9901-4ca9-8363-840be431af12
2025-08-04 12:45:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:45:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:45:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    delete 
    from
        calendar_events 
    where
        id=? 
        and user_id=?
2025-08-04 12:45:34 [http-nio-8080-exec-6] INFO  com.example.demo.CalendarController - Event not found for deletion: 3b8f498c-9901-4ca9-8363-840be431af12
2025-08-04 12:45:35 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:45:35 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:45:35 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:45:38 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:45:38 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:45:38 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:45:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:45:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:45:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:45:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:45:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:45:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:45:38 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:45:38 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:45:38 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:45:40 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:45:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:45:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:45:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:45:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:45:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:45:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:45:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:45:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:45:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:45:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:45:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:45:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:45:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:45:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:45:40 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:45:40 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:45:40 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:45:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:45:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:45:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:45:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:45:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:45:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 12:45:57 [http-nio-8080-exec-7] INFO  c.e.d.CalendarEventEnhancementService - Analyzing input for calendar events: I also have a book reading event in 3 weeks 2 days also
2025-08-04 12:45:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 12:46:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:46:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:46:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.title=? 
        and ce1_0.start_date=? 
        and ce1_0.user_id=?
2025-08-04 12:46:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    insert 
    into
        calendar_events
        (description, event_color, is_all_day, plan_title, start_date, title, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-08-04 12:46:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:46:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:46:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.title=? 
        and ce1_0.start_date=? 
        and ce1_0.user_id=?
2025-08-04 12:46:08 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:46:08 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:46:08 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:46:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:46:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:46:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:46:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:46:31 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:46:31 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:46:31 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:46:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:46:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:46:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:46:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:46:35 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:46:35 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:46:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:46:35 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:46:35 [http-nio-8080-exec-5] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 12:46:35 [http-nio-8080-exec-7] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 12:46:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:46:35 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:46:35 [http-nio-8080-exec-5] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 12:46:35 [http-nio-8080-exec-5] INFO  com.example.demo.MemoryController - Getting all memories for user ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 12:46:35 [http-nio-8080-exec-7] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 12:46:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 12:46:35 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 12:46:35 [http-nio-8080-exec-5] INFO  com.example.demo.MemoryController - Found 6 memories for user
2025-08-04 12:46:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:46:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:46:35 [http-nio-8080-exec-4] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 12:46:35 [http-nio-8080-exec-9] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 12:46:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:46:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:46:35 [http-nio-8080-exec-9] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 12:46:35 [http-nio-8080-exec-9] INFO  com.example.demo.MemoryController - Getting all memories for user ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 12:46:35 [http-nio-8080-exec-4] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 12:46:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 12:46:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 12:46:35 [http-nio-8080-exec-9] INFO  com.example.demo.MemoryController - Found 6 memories for user
2025-08-04 12:46:40 [http-nio-8080-exec-6] ERROR c.e.demo.JwtAuthenticationFilter - Could not set user authentication: {}
io.jsonwebtoken.ExpiredJwtException: JWT expired 1250 milliseconds ago at 2025-08-04T09:46:39.000Z. Current time: 2025-08-04T09:46:40.250Z. Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:682)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:362)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:94)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:36)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:29)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseSignedClaims(DefaultJwtParser.java:821)
	at com.example.demo.JwtUtil.extractAllClaims(JwtUtil.java:74)
	at com.example.demo.JwtUtil.extractClaim(JwtUtil.java:46)
	at com.example.demo.JwtUtil.extractUsername(JwtUtil.java:42)
	at com.example.demo.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:45)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-08-04 12:46:43 [http-nio-8080-exec-3] ERROR c.e.demo.JwtAuthenticationFilter - Could not set user authentication: {}
io.jsonwebtoken.ExpiredJwtException: JWT expired 4050 milliseconds ago at 2025-08-04T09:46:39.000Z. Current time: 2025-08-04T09:46:43.050Z. Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:682)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:362)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:94)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:36)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:29)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseSignedClaims(DefaultJwtParser.java:821)
	at com.example.demo.JwtUtil.extractAllClaims(JwtUtil.java:74)
	at com.example.demo.JwtUtil.extractClaim(JwtUtil.java:46)
	at com.example.demo.JwtUtil.extractUsername(JwtUtil.java:42)
	at com.example.demo.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:45)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-08-04 12:46:51 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:46:51 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        email=?,
        email_verified=?,
        full_name=?,
        is_active=?,
        last_login=?,
        memory_password=?,
        password=?,
        profile_image=?,
        provider=?,
        reset_token=?,
        reset_token_expiry=?,
        verification_token=? 
    where
        id=?
2025-08-04 12:46:51 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:46:51 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:46:51 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:46:51 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:46:51 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:46:51 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:46:51 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:46:51 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:46:51 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:46:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:46:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:46:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:46:53 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:46:53 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:46:53 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:46:53 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:46:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:46:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:00 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:00 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:00 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:01 [http-nio-8080-exec-8] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 12:47:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:01 [http-nio-8080-exec-8] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 12:47:01 [http-nio-8080-exec-8] INFO  com.example.demo.MemoryController - Getting all memories for user ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 12:47:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 12:47:01 [http-nio-8080-exec-8] INFO  com.example.demo.MemoryController - Found 6 memories for user
2025-08-04 12:47:01 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:01 [http-nio-8080-exec-3] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 12:47:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:01 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:01 [http-nio-8080-exec-3] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 12:47:01 [http-nio-8080-exec-10] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 12:47:01 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 12:47:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:01 [http-nio-8080-exec-10] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 12:47:01 [http-nio-8080-exec-10] INFO  com.example.demo.MemoryController - Getting all memories for user ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 12:47:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 12:47:01 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:01 [http-nio-8080-exec-10] INFO  com.example.demo.MemoryController - Found 6 memories for user
2025-08-04 12:47:01 [http-nio-8080-exec-1] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 12:47:01 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:01 [http-nio-8080-exec-1] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 12:47:01 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 12:47:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 12:47:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 12:47:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 12:47:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 12:47:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 12:47:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 12:47:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 12:47:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 12:47:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 12:47:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 12:47:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 12:47:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 12:47:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:06 [http-nio-8080-exec-7] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 12:47:06 [http-nio-8080-exec-5] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 12:47:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:06 [http-nio-8080-exec-7] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 12:47:06 [http-nio-8080-exec-7] INFO  com.example.demo.MemoryController - Getting all memories for user ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 12:47:06 [http-nio-8080-exec-5] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 12:47:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 12:47:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 12:47:06 [http-nio-8080-exec-7] INFO  com.example.demo.MemoryController - Found 0 memories for user
2025-08-04 12:47:09 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:09 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:09 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:47:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:47:14 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:14 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:47:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:47:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:47:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:47:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 12:47:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    insert 
    into
        user_memories
        (category, created_at, encrypted_content, is_active, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-08-04 12:47:23 [http-nio-8080-exec-8] INFO  c.e.d.CalendarEventEnhancementService - Analyzing input for calendar events: I have a wedding in 2 weeks man
2025-08-04 12:47:23 [http-nio-8080-exec-8] INFO  c.e.d.CalendarEventEnhancementService - Detected event creation indicator: 'i have a' in input: I have a wedding in 2 weeks man
2025-08-04 12:47:23 [http-nio-8080-exec-8] INFO  c.e.d.CalendarEventEnhancementService - Detected event: DetectedEvent{title='Wedding', daysFromToday=14}
2025-08-04 12:47:23 [http-nio-8080-exec-8] WARN  c.e.d.CalendarEventEnhancementService - Rejecting event with problematic title: A Wedding
2025-08-04 12:47:23 [http-nio-8080-exec-8] INFO  c.e.d.CalendarEventEnhancementService - Filtered out potential false positive: DetectedEvent{title='A Wedding', daysFromToday=14} from input: I have a wedding in 2 weeks man
2025-08-04 12:47:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 12:47:26 [reactor-http-nio-6] INFO  c.e.d.CalendarResponseValidationService - Validating calendar response for input: I have a wedding in 2 weeks man
2025-08-04 12:47:26 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:26 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:26 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.title=? 
        and ce1_0.start_date=? 
        and ce1_0.user_id=?
2025-08-04 12:47:26 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    insert 
    into
        calendar_events
        (description, event_color, is_all_day, plan_title, start_date, title, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-08-04 12:47:26 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:26 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:26 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.title=? 
        and ce1_0.start_date=? 
        and ce1_0.user_id=?
2025-08-04 12:47:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:47:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:47:44 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:48:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 12:48:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    insert 
    into
        user_memories
        (category, created_at, encrypted_content, is_active, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-08-04 12:48:18 [http-nio-8080-exec-3] INFO  c.e.d.CalendarEventEnhancementService - Analyzing input for calendar events: I have a book reading event in 3 weeks
2025-08-04 12:48:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 12:48:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.title=? 
        and ce1_0.start_date=? 
        and ce1_0.user_id=?
2025-08-04 12:48:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:48:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:48:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:48:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:48:25 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:25 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:25 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:48:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:48:25 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:25 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:25 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:48:29 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:29 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:29 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:48:29 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:29 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:29 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:48:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:48:29 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:29 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:29 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:48:29 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:29 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:29 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:48:44 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 12:48:47 [http-nio-8080-exec-4] INFO  c.e.d.CalendarEventEnhancementService - Analyzing input for calendar events: and a car meet in 2 days
2025-08-04 12:48:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 12:48:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.title=? 
        and ce1_0.start_date=? 
        and ce1_0.user_id=?
2025-08-04 12:48:53 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:53 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:53 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:48:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:48:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:48:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:48:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:48:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:48:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:48:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:48:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:49:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:49:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:49:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:49:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:49:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:50:12 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:50:12 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:50:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:50:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:50:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:50:17 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:50:17 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:50:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:50:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:50:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:50:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:50:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:50:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:50:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:50:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:50:28 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:50:28 [http-nio-8080-exec-8] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 12:50:28 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:50:28 [http-nio-8080-exec-8] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 12:50:28 [http-nio-8080-exec-8] INFO  com.example.demo.MemoryController - Getting all memories for user ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 12:50:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:50:28 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 12:50:28 [http-nio-8080-exec-8] INFO  com.example.demo.MemoryController - Found 2 memories for user
2025-08-04 12:50:28 [http-nio-8080-exec-3] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 12:50:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:50:28 [http-nio-8080-exec-3] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 12:50:28 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:50:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 12:50:28 [http-nio-8080-exec-10] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 12:50:28 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:50:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:50:28 [http-nio-8080-exec-10] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 12:50:28 [http-nio-8080-exec-10] INFO  com.example.demo.MemoryController - Getting all memories for user ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 12:50:28 [http-nio-8080-exec-1] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 12:50:28 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 12:50:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:50:28 [http-nio-8080-exec-10] INFO  com.example.demo.MemoryController - Found 2 memories for user
2025-08-04 12:50:28 [http-nio-8080-exec-1] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 12:50:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 12:50:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:51:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:51:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:52:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:53:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:54:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:55:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:55:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:56:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:56:01 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:56:01 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:56:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:56:01 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:56:01 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:56:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:56:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:56:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:56:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:56:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:56:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:56:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:56:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:56:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:56:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:56:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:56:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:56:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:56:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:56:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:56:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:56:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:56:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 12:56:14 [http-nio-8080-exec-8] INFO  c.e.d.CalendarEventEnhancementService - Analyzing input for calendar events: Hey man I also have a car meet in 4 weeks
2025-08-04 12:56:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 12:56:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:56:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:56:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.title=? 
        and ce1_0.start_date=? 
        and ce1_0.user_id=?
2025-08-04 12:56:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    insert 
    into
        calendar_events
        (description, event_color, is_all_day, plan_title, start_date, title, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-08-04 12:56:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:56:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:56:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.title=? 
        and ce1_0.start_date=? 
        and ce1_0.user_id=?
2025-08-04 12:56:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        calendar_events
        (description, event_color, is_all_day, plan_title, start_date, title, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-08-04 12:56:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:56:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:56:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:56:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:56:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:56:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:56:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:57:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:57:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:57:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:57:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:57:31 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:58:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:58:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:58:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:58:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:58:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:59:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:59:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:59:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 12:59:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 12:59:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:00:02 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:00:02 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:00:02 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:00:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:01:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:01:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:01:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:01:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:01:16 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:01:16 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:01:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:01:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:01:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:01:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:01:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:01:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:01:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:01:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:01:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:01:16 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:01:16 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:01:16 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:01:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:01:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:01:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:01:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:02:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:02:16 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:02:16 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:02:16 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:02:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:03:16 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:03:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:03:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:03:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:03:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:04:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:24 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:24 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:04:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:04:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:04:24 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:24 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:24 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:04:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:04:31 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:31 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:35 [http-nio-8080-exec-4] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 13:04:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:35 [http-nio-8080-exec-4] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 13:04:35 [http-nio-8080-exec-4] INFO  com.example.demo.MemoryController - Getting all memories for user ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 13:04:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 13:04:35 [http-nio-8080-exec-4] INFO  com.example.demo.MemoryController - Found 2 memories for user
2025-08-04 13:04:35 [http-nio-8080-exec-6] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 13:04:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:35 [http-nio-8080-exec-6] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 13:04:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 13:04:35 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:35 [http-nio-8080-exec-8] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 13:04:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:35 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:35 [http-nio-8080-exec-8] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 13:04:35 [http-nio-8080-exec-3] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 13:04:35 [http-nio-8080-exec-8] INFO  com.example.demo.MemoryController - Getting all memories for user ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 13:04:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:35 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 13:04:35 [http-nio-8080-exec-3] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 13:04:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 13:04:35 [http-nio-8080-exec-8] INFO  com.example.demo.MemoryController - Found 2 memories for user
2025-08-04 13:04:42 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:42 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 13:04:42 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 13:04:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id,
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        user_memories m1_0 
    join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        m1_0.id=?
2025-08-04 13:04:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        user_memories 
    set
        category=?,
        created_at=?,
        encrypted_content=?,
        is_active=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-04 13:04:42 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:42 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:42 [http-nio-8080-exec-2] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 13:04:42 [http-nio-8080-exec-9] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 13:04:42 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:42 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:42 [http-nio-8080-exec-2] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 13:04:42 [http-nio-8080-exec-9] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 13:04:42 [http-nio-8080-exec-2] INFO  com.example.demo.MemoryController - Getting all memories for user ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 13:04:42 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 13:04:42 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 13:04:42 [http-nio-8080-exec-2] INFO  com.example.demo.MemoryController - Found 0 memories for user
2025-08-04 13:04:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:04:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:04:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 13:04:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    insert 
    into
        user_memories
        (category, created_at, encrypted_content, is_active, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-08-04 13:04:55 [http-nio-8080-exec-10] INFO  c.e.d.CalendarEventEnhancementService - Analyzing input for calendar events: I have a wedding in 2 weeks
2025-08-04 13:04:55 [http-nio-8080-exec-10] INFO  c.e.d.CalendarEventEnhancementService - Detected event creation indicator: 'i have a' in input: I have a wedding in 2 weeks
2025-08-04 13:04:55 [http-nio-8080-exec-10] INFO  c.e.d.CalendarEventEnhancementService - Detected event: DetectedEvent{title='Wedding', daysFromToday=14}
2025-08-04 13:04:55 [http-nio-8080-exec-10] WARN  c.e.d.CalendarEventEnhancementService - Rejecting event with problematic title: A Wedding
2025-08-04 13:04:55 [http-nio-8080-exec-10] INFO  c.e.d.CalendarEventEnhancementService - Filtered out potential false positive: DetectedEvent{title='A Wedding', daysFromToday=14} from input: I have a wedding in 2 weeks
2025-08-04 13:04:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 13:04:58 [reactor-http-nio-8] INFO  c.e.d.CalendarResponseValidationService - Validating calendar response for input: I have a wedding in 2 weeks
2025-08-04 13:04:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.title=? 
        and ce1_0.start_date=? 
        and ce1_0.user_id=?
2025-08-04 13:04:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    insert 
    into
        calendar_events
        (description, event_color, is_all_day, plan_title, start_date, title, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-08-04 13:04:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:04:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:04:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:05:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:05:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:05:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    delete 
    from
        calendar_events 
    where
        id=? 
        and user_id=?
2025-08-04 13:05:04 [http-nio-8080-exec-6] INFO  com.example.demo.CalendarController - Event deleted successfully via bulk delete: d25a6bd0-a2dd-47b7-a15d-312c1d205d11
2025-08-04 13:05:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:05:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:05:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    delete 
    from
        calendar_events 
    where
        id=? 
        and user_id=?
2025-08-04 13:05:04 [http-nio-8080-exec-8] INFO  com.example.demo.CalendarController - Event not found for deletion: d25a6bd0-a2dd-47b7-a15d-312c1d205d11
2025-08-04 13:05:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:05:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:05:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    delete 
    from
        calendar_events 
    where
        id=? 
        and user_id=?
2025-08-04 13:05:05 [http-nio-8080-exec-1] INFO  com.example.demo.CalendarController - Event deleted successfully via bulk delete: fb7ef726-d57a-467d-88e3-5f94c9221dae
2025-08-04 13:05:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:05:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:05:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    delete 
    from
        calendar_events 
    where
        id=? 
        and user_id=?
2025-08-04 13:05:08 [http-nio-8080-exec-7] INFO  com.example.demo.CalendarController - Event deleted successfully via bulk delete: c84614db-427b-4616-8ef5-38230a841287
2025-08-04 13:05:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:05:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:05:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    delete 
    from
        calendar_events 
    where
        id=? 
        and user_id=?
2025-08-04 13:05:08 [http-nio-8080-exec-5] INFO  com.example.demo.CalendarController - Event not found for deletion: c84614db-427b-4616-8ef5-38230a841287
2025-08-04 13:05:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:05:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:05:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    delete 
    from
        calendar_events 
    where
        id=? 
        and user_id=?
2025-08-04 13:05:18 [http-nio-8080-exec-2] INFO  com.example.demo.CalendarController - Event deleted successfully via bulk delete: 5fa19d93-4833-43d5-8f95-74a30a0ca8e7
2025-08-04 13:05:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:05:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:05:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    delete 
    from
        calendar_events 
    where
        id=? 
        and user_id=?
2025-08-04 13:05:19 [http-nio-8080-exec-4] INFO  com.example.demo.CalendarController - Event not found for deletion: 5fa19d93-4833-43d5-8f95-74a30a0ca8e7
2025-08-04 13:05:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:05:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:05:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:05:21 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:05:21 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:05:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:05:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:05:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:05:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:05:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:05:24 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:05:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:05:24 [http-nio-8080-exec-9] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 13:05:24 [http-nio-8080-exec-5] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 13:05:24 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:05:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:05:24 [http-nio-8080-exec-9] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 13:05:24 [http-nio-8080-exec-5] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 13:05:24 [http-nio-8080-exec-5] INFO  com.example.demo.MemoryController - Getting all memories for user ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 13:05:24 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 13:05:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 13:05:24 [http-nio-8080-exec-5] INFO  com.example.demo.MemoryController - Found 1 memories for user
2025-08-04 13:05:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:05:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:05:24 [http-nio-8080-exec-2] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 13:05:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:05:24 [http-nio-8080-exec-4] INFO  com.example.demo.MemoryController - Getting user ID for email: Arnoldqwdr@gmail.com
2025-08-04 13:05:24 [http-nio-8080-exec-2] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 13:05:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:05:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        distinct m1_0.category 
    from
        user_memories m1_0 
    where
        m1_0.user_id=? 
        and m1_0.is_active=1
2025-08-04 13:05:24 [http-nio-8080-exec-4] INFO  com.example.demo.MemoryController - Found user with ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 13:05:24 [http-nio-8080-exec-4] INFO  com.example.demo.MemoryController - Getting all memories for user ID: 2e7aaab1-ff92-404e-a7a1-672f9423db8b
2025-08-04 13:05:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.category,
        m1_0.created_at,
        m1_0.encrypted_content,
        m1_0.is_active,
        m1_0.updated_at,
        m1_0.user_id 
    from
        user_memories m1_0 
    left join
        users u1_0 
            on u1_0.id=m1_0.user_id 
    where
        u1_0.id=? 
        and m1_0.is_active=1
2025-08-04 13:05:24 [http-nio-8080-exec-4] INFO  com.example.demo.MemoryController - Found 1 memories for user
2025-08-04 13:05:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:05:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:05:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:05:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:05:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:05:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:05:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:06:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:06:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:06:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:06:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:06:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:07:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:07:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:07:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:07:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:07:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:08:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:08:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:08:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:08:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:08:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:09:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:09:30 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:09:30 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:09:30 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:09:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:10:24 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:10:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:10:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:10:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:10:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:11:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:11:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:11:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:11:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:11:51 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:11:51 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:11:51 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    delete 
    from
        calendar_events 
    where
        id=? 
        and user_id=?
2025-08-04 13:11:51 [http-nio-8080-exec-9] INFO  com.example.demo.CalendarController - Event deleted successfully via bulk delete: febca595-efd6-4119-b519-da99f01703e3
2025-08-04 13:11:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:11:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:11:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    delete 
    from
        calendar_events 
    where
        id=? 
        and user_id=?
2025-08-04 13:11:51 [http-nio-8080-exec-2] INFO  com.example.demo.CalendarController - Event not found for deletion: febca595-efd6-4119-b519-da99f01703e3
2025-08-04 13:11:51 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:11:51 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:11:51 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:11:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:12:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:12:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:12:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:12:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:12:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:12:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:12:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:12:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:13:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:13:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:13:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:13:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:13:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:14:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:14:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:14:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:14:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:14:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:15:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:15:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:15:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:15:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:15:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:16:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:16:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:16:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:16:24 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:16:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:16:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:16:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:16:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:16:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:17:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:17:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:17:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        email=?,
        email_verified=?,
        full_name=?,
        is_active=?,
        last_login=?,
        memory_password=?,
        password=?,
        profile_image=?,
        provider=?,
        reset_token=?,
        reset_token_expiry=?,
        verification_token=? 
    where
        id=?
2025-08-04 13:17:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:17:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:17:05 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:17:05 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:17:05 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:17:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:17:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:17:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:17:24 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:17:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:18:05 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:18:05 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:18:05 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:18:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:18:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:19:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:19:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:19:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:19:25 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:19:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:20:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:20:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:20:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:20:25 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:20:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:21:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:21:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:21:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:21:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:22:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:22:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:22:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:22:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:23:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:23:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:23:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:23:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:24:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:24:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:24:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:24:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:25:43 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:25:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:25:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:25:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:26:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:26:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:26:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:26:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
2025-08-04 13:27:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:27:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:27:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created,
        u1_0.email,
        u1_0.email_verified,
        u1_0.full_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.memory_password,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.reset_token,
        u1_0.reset_token_expiry,
        u1_0.verification_token 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-04 13:27:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ce1_0.id,
        ce1_0.description,
        ce1_0.event_color,
        ce1_0.is_all_day,
        ce1_0.plan_title,
        ce1_0.start_date,
        ce1_0.title,
        ce1_0.user_id 
    from
        calendar_events ce1_0 
    where
        ce1_0.user_id=?
